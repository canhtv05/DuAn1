/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.panel;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.KhachThue.ModelKhachThue;
import repository.KhachThue.repositoriesKhachThue;
import view.component.message.MessageFrame;

/**
 *
 * @author CanhPC
 */
public class QlyKhachThue extends javax.swing.JPanel {

    private repositoriesKhachThue rpKT = new repositoriesKhachThue();
    private DefaultTableModel mol = new DefaultTableModel();
    private MessageFrame mesg;
    private MessageFrame mess = new MessageFrame();
    

    private int index = -1;

    /**
     * Creates new form QliKhachThue
     */

    public QlyKhachThue() {
        initComponents();
        tblKhachThue.fixTable(jScrollPane3);
        fillTable(rpKT.getAll(0));
        fillCBB(rpKT.getCBB());
    }
    
        public void fillTable(ArrayList<model.KhachThue.ModelKhachThue> list) {
        mol = (DefaultTableModel) tblKhachThue.getModel();
        mol.setRowCount(0);

        for (ModelKhachThue x : list) {
            mol.addRow(x.toDataRow());
        }

    }

    public void fillCBB(ArrayList<model.KhachThue.ModelKhachThue> list) {
        cbbMaPhong.removeAllItems();
        cbbLocPhong.removeAllItems();
        cbbLocPhong.addItem("Tất cả");

        for (ModelKhachThue x : list) {
            cbbMaPhong.addItem(x.getMaPT());
            cbbLocPhong.addItem(x.getMaPT());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtTimKhachThue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        txtHoTen = new view.component.textfield.TextField();
        jPanel3 = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtDienThoai = new view.component.textfield.TextField();
        txtEmail = new view.component.textfield.TextField();
        txtCCCD = new view.component.textfield.TextField();
        txtMaKT = new view.component.textfield.TextField();
        cbbMaPhong = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnThem = new view.component.button.Button();
        btnSua = new view.component.button.Button();
        btnLamMoi = new view.component.button.Button();
        btnTimKiem = new view.component.button.Button();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbbLocPhong = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblKhachThue = new view.component.table.Table();
        btnXoa = new view.component.button.Button();
        cbbTinhTrang = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        txtTimKhachThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKhachThueActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(51, 153, 255));

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        txtDiaChi.setBorder(null);
        jScrollPane2.setViewportView(txtDiaChi);

        txtHoTen.setLabelText("Họ tên");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giới tính", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(153, 153, 153))); // NOI18N

        buttonGroup1.add(rdoNam);
        rdoNam.setText(" Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(rdoNam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdoNu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(rdoNam)
                .addComponent(rdoNu))
        );

        txtDienThoai.setLabelText("Điện thoại");

        txtEmail.setLabelText("Email");

        txtCCCD.setLabelText("CCCD");
        txtCCCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCCCDActionPerformed(evt);
            }
        });

        txtMaKT.setEditable(false);
        txtMaKT.setLabelText("Mã khách thuê");

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText(" Mã phòng");

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText(" Ngày sinh");

        txtNgaySinh.setBackground(new java.awt.Color(255, 255, 255));
        txtNgaySinh.setToolTipText("");
        txtNgaySinh.setDateFormatString("dd-MM-yyyy");

        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText(" Địa chỉ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(cbbMaPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaKT, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                            .addComponent(txtDienThoai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCCCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 255));
        jLabel11.setText("Quản lý khách thuê/Khách thuê");

        btnThem.setBackground(new java.awt.Color(153, 255, 0));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 204));
        btnSua.setText("Cập nhật");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(204, 204, 204));
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(204, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel5.setText("Bộ lọc: ");

        jLabel6.setText("Phòng:");

        cbbLocPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocPhongActionPerformed(evt);
            }
        });

        tblKhachThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã KT", "Mã PT", "Họ tên", "Ngày sinh", "Giới tính", "Điện thoại", "Email", "Địa chỉ", "CCCD"
            }
        ));
        tblKhachThue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachThueMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblKhachThue);

        btnXoa.setBackground(new java.awt.Color(255, 51, 51));
        btnXoa.setText("Delete");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        cbbTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang thuê", "Đã hết hạn hợp đồng" }));
        cbbTinhTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTinhTrangActionPerformed(evt);
            }
        });

        jLabel7.setText("Tình Trạng:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(372, 372, 372)
                                .addComponent(txtTimKhachThue, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                        .addComponent(btnLamMoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbbLocPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbbTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 253, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKhachThue, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel5)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbbLocPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        txtTimKhachThue.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKhachThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKhachThueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKhachThueActionPerformed

    private void txtCCCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCCCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCCCDActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        
        if (readForm() != null) {
            mesg = new MessageFrame();
            if (readForm().getMaKT().equalsIgnoreCase(rpKT.check(readForm().getMaKT()))) {
                mesg.showMessage("error", "đã tồn tại mã khách: " + txtMaKT.getText());
            } else {
                
                if (rpKT.them(readForm()) > 0) {
//                cbbMaPhong.addItem(readForm().getMaPT());
//                JOptionPane.showMessageDialog(this, "Thêm thành công")
                    mesg.showMessage("success", "Thêm thành công");
                    fillTable(rpKT.getAll(0));
                    cbbLocPhong.setSelectedItem("Tất cả");
                } else {
                    mesg.showMessage("error", "Thêm thất bại");

                }
            }
        
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        mesg = new MessageFrame();
        if (readForm() != null) {
            if (rpKT.sua(readForm()) > 0) {
                mesg.showMessage("success", "cập nhật thành công");
//                JOptionPane.showConfirmDialog(this, "cập nhật thành công");
                fillTable(rpKT.getAll(0));
                cbbLocPhong.setSelectedItem("Tất cả");

            } else {
                mesg.showMessage("error", "cập nhật thất bại");
//                JOptionPane.showConfirmDialog(this, "cập nhật thất bại");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtTimKhachThue.setText("");
        txtMaKT.setText("");
//        txtMaPT.setText("");
        txtHoTen.setText("");
        txtNgaySinh.setDate(null);
        txtDienThoai.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        txtCCCD.setText("");
//        fillCBB(rpKT.getCBB());
        fillTable(rpKT.getAll(0));
        cbbLocPhong.setSelectedItem("Tất cả");


    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        fillTable(rpKT.timKiem(txtTimKhachThue.getText(),0));
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void cbbLocPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocPhongActionPerformed
        // TODO add your handling code here:
        int tt;
        if (cbbTinhTrang.getSelectedItem().toString().equalsIgnoreCase("Đang thuê")){
            tt=0;
        } else {
            tt=1;
        }
        if (cbbLocPhong.getSelectedItem().toString() != "Tất cả") {
            fillTable(rpKT.timKiem(cbbLocPhong.getSelectedItem().toString(),tt));
        } else {
            fillTable(rpKT.getAll(tt));
        }

    }//GEN-LAST:event_cbbLocPhongActionPerformed

    private void tblKhachThueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachThueMouseClicked
        // TODO add your handling code here:
        index = tblKhachThue.getSelectedRow();
        txtMaKT.setText(tblKhachThue.getValueAt(index, 0).toString());
//        txtMaPT.setText(tblKhachThue.getValueAt(index, 1).toString());
        cbbMaPhong.setSelectedItem(tblKhachThue.getValueAt(index, 1).toString());
        txtHoTen.setText(tblKhachThue.getValueAt(index, 2).toString());
        txtNgaySinh.setDate((Date) tblKhachThue.getValueAt(index, 3));
        if (tblKhachThue.getValueAt(index, 4).toString().equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }

        txtDienThoai.setText(tblKhachThue.getValueAt(index, 5).toString());
        txtEmail.setText(tblKhachThue.getValueAt(index, 6).toString());
        txtDiaChi.setText(tblKhachThue.getValueAt(index, 7).toString());
        txtCCCD.setText(tblKhachThue.getValueAt(index, 8).toString());
    }//GEN-LAST:event_tblKhachThueMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        mess.showMessage("message", "bạn có chắc chắn muốn DELETE");
        if (txtMaKT.getText().isEmpty()==false) {
            mess.setOnOkClicked(() ->{
            mesg = new MessageFrame();
            if (rpKT.xoa(Integer.parseInt(txtMaKT.getText()))>0) {
                mesg.showMessage("success", "DELETE thành công");
                fillTable(rpKT.getAll(0));
            } else {
                mesg.showMessage("error", "DELETE thất bại");
            }
            
            });
        } else {
            mesg.showMessage("error", "DELETE thất bại");
        }
        
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void cbbTinhTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTinhTrangActionPerformed
        // TODO add your handling code here:
        if (cbbTinhTrang.getSelectedItem().toString().equalsIgnoreCase("Đang thuê")) {
            fillTable(rpKT.getAll(0));
        } else {
            fillTable(rpKT.getAll(1));

        }
    }//GEN-LAST:event_cbbTinhTrangActionPerformed

    public model.KhachThue.ModelKhachThue readForm() {
        mesg = new MessageFrame();
        String maKT, hoTen, dienThoai, email, diaChi, cccd, maPT;
        Date ngaySinh;
        boolean gioiTinh;
        maKT = txtMaKT.getText().trim();
//        maPT=txtMaPT.getText().trim();
        maPT = cbbMaPhong.getSelectedItem().toString();
        hoTen = txtHoTen.getText().trim();
        ngaySinh = txtNgaySinh.getDate();
        gioiTinh = false;
        if (rdoNu.isSelected()) {
            gioiTinh = true;
        }
        dienThoai = txtDienThoai.getText().trim();
        email = txtEmail.getText().trim();
        diaChi = txtDiaChi.getText().trim();
        cccd = txtCCCD.getText().trim();
//        if (maKT.isEmpty()) {
//            mesg.showMessage("error", "chưa nhập mã Khách thuê");
////            JOptionPane.showMessageDialog(this, "chưa nhập mã KT");
//            txtMaKT.requestFocus();
//            return null;
//        }
//        if (maPT.isEmpty()) {
//            mesg.showMessage("error", "chưa nhập mã Phòng trọ");
////            JOptionPane.showMessageDialog(this, "chưa nhập mã PT");
//            txtMaPT.requestFocus();
//            return null;
//        }
        if (hoTen.isEmpty()) {
            mesg.showMessage("error", "chưa nhập Họ tên");
//            JOptionPane.showMessageDialog(this, "chưa nhập Họ tên");
            txtHoTen.requestFocus();
            return null;
        }
        if (ngaySinh.equals("")) {
            mesg.showMessage("error", "chưa nhập Ngày sinh");
//            JOptionPane.showMessageDialog(this, "chưa nhập ngày sinh");
            return null;
        }
        if (rdoNam.isSelected() == false && rdoNu.isSelected() == false) {
            mesg.showMessage("error", "chưa lựa chọn giới tính");
//            JOptionPane.showMessageDialog(this, "chưa lựa chọn giới tính");
            return null;
        }
        if (dienThoai.isEmpty()) {
            mesg.showMessage("error", "chưa nhập số điện thoại");
//            JOptionPane.showMessageDialog(this, "chưa nhập số điện thoại");
            txtDienThoai.requestFocus();
            return null;
        }
        if (dienThoai.equals(rpKT.CheckSDT(dienThoai))) {
            mesg.showMessage("error", "Đã tồn tại số điện thoại này");
            txtDienThoai.requestFocus();
            return null;
        }
        
        if (email.isEmpty()) {
            mesg.showMessage("error", "chưa nhập Email");
//            JOptionPane.showMessageDialog(this, "chưa nhập email");
            txtEmail.requestFocus();
            return null;
        }
        if (email.endsWith("@gmail.com") == false) {
            mesg.showMessage("error", "Email chưa đúng định dạng");
//            JOptionPane.showMessageDialog(this, "email chưa đúng định dạng");
            txtEmail.requestFocus();
            return null;
        }
        if (email.equals(rpKT.CheckEmail(email))) {
            mesg.showMessage("error", "Email đã tồn tại");
            txtEmail.requestFocus();
            return null;

        }
        if (cccd.isEmpty()) {
            mesg.showMessage("error", "chưa nhập CCCD");

//            JOptionPane.showMessageDialog(this, "chưa nhập CCCD");
            txtCCCD.requestFocus();
            return null;
        }
        if (cccd.equals(rpKT.CheckCCCD(cccd))) {
            mesg.showMessage("error", "CCCD này đã tồn tại");

//            JOptionPane.showMessageDialog(this, "chưa nhập CCCD");
            txtCCCD.requestFocus();
            return null;
        }
        if (diaChi.isEmpty()) {
            mesg.showMessage("error", "chưa nhập địa chỉ");

//            JOptionPane.showMessageDialog(this, "chưa nhập địa chỉ");
            txtDiaChi.requestFocus();
            return null;
        }
        return new model.KhachThue.ModelKhachThue(maKT, maPT, hoTen, ngaySinh, gioiTinh, dienThoai, email, diaChi, cccd);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.component.button.Button btnLamMoi;
    private view.component.button.Button btnSua;
    private view.component.button.Button btnThem;
    private view.component.button.Button btnTimKiem;
    private view.component.button.Button btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbLocPhong;
    private javax.swing.JComboBox<String> cbbMaPhong;
    private javax.swing.JComboBox<String> cbbTinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNam1;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoNu1;
    private view.component.table.Table tblKhachThue;
    private view.component.textfield.TextField txtCCCD;
    private javax.swing.JTextArea txtDiaChi;
    private view.component.textfield.TextField txtDienThoai;
    private view.component.textfield.TextField txtEmail;
    private view.component.textfield.TextField txtHoTen;
    private view.component.textfield.TextField txtMaKT;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private javax.swing.JTextField txtTimKhachThue;
    // End of variables declaration//GEN-END:variables
}
